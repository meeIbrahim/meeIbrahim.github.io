---
import type { GetStaticPaths, MarkdownInstance, Page } from "astro";
import BaseLayout from "../../../layouts/BaseLayout.astro";
import BlogContainer from "../../../components/BlogContainer.astro";
export const getStaticPaths = (async ({ paginate }) => {
    const pageSize = Number(import.meta.env.PAGE_SIZE);
    const allPosts: MarkdownInstance<Record<string, any>>[] =
        await Astro.glob("../../posts/*.md");
    const uniqueTags = [
        ...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
    ];
    return uniqueTags.flatMap((tag) => {
        const filteredPosts = allPosts.filter((post) =>
            post.frontmatter.tags.includes(tag),
        );
        return paginate(filteredPosts, { params: { tag }, pageSize: pageSize });
    });
}) satisfies GetStaticPaths;
const { tag } = Astro.params as { tag: string };
const { page } = Astro.props as {
    page: Page<MarkdownInstance<Record<string, any>>>;
};
---

<BaseLayout pageTitle={`Posts tagged with "${tag}"`}>
    <BlogContainer page={page} />
</BaseLayout>
