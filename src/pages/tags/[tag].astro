---
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from "../../components/BlogPost.astro";
import type { Props } from "astro/components/ViewTransitions.astro";
import type { MarkdownInstance } from "astro";
import BlogContainer from "../../components/BlogContainer.astro";
export async function getStaticPaths() {
    /*
    A getStaticPaths function should always return a list of objects containing params
     (what to call each page route) and optionally any props (data that you want to pass to those pages). 
    */
    const allPosts: MarkdownInstance<Record<string, any>>[] =
        await Astro.glob("../posts/*.md");
    const uniqueTags = [
        ...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
    ];
    return uniqueTags.map((tag) => {
        const filteredPosts = allPosts.filter((post) =>
            post.frontmatter.tags.includes(tag),
        );
        return {
            params: { tag },
            props: { posts: filteredPosts },
        };
    });
}

const { tag } = Astro.params as { tag: string };
const { posts } = Astro.props as {
    posts: MarkdownInstance<Record<string, any>>[];
};
---

<BaseLayout pageTitle={tag}>
    <p>Posts tagged with {tag}</p>
    <BlogContainer posts={posts} />
</BaseLayout>
